{
    "parser": "babel-eslint",
    "env": {
        "es6": true
    },
    "extends": "google",
    "globals": {},
    "plugins": [],
    "rules": {
        "require-jsdoc": [0],
        "valid-jsdoc": [0],
        "max-len": ["error", 120],

        //ECMAScript 6
        "arrow-body-style": [2, "as-needed"],                       //require braces in arrow function body
        "arrow-parens": [2, "as-needed"],                           //require parens in arrow function arguments
        "arrow-spacing": 2,                                         //require space before/after arrow function's arrow
        "constructor-super": 2,                                     //verify calls of super() in constructors
        "generator-star-spacing": 0,                                //enforce spacing around the * in generator functions
        "no-class-assign": 2,                                       //disallow modifying variables of class declarations
        "no-confusing-arrow": 2,                                    //disallow arrow functions where they could be confused with comparisons
        "no-const-assign": 2,                                       //disallow modifying variables that are declared using const
        "no-dupe-class-members": 2,                                 //disallow duplicate name in class members
        "no-duplicate-imports": 2,                                  //disallow duplicate module imports
        "no-new-symbol": 2,                                         //disallow use of the new operator with the Symbol object
        "no-this-before-super": 2,                                  //disallow use of this/super before calling super() in constructors.
        "no-useless-computed-key": 2,                               //disallow unnecessary computed property keys in object literals
        "no-useless-constructor": 2,                                //disallow unnecessary constructor
        "no-useless-rename": 2,                                     //disallow renaming import, export, and destructured assignments to the same name
        "no-var": 0,                                                //require let or const instead of var
        "object-shorthand": 1,                                      //require method and property shorthand syntax for object literals
        "prefer-arrow-callback": 0,                                 //suggest using arrow functions as callbacks
        "prefer-const": 0,                                          //suggest using const declaration for variables that are never modified after declared
        "prefer-reflect": 1,                                        //suggest using Reflect methods where applicable
        "prefer-rest-params": 1,                                    //suggest using the rest parameters instead of arguments
        "prefer-spread": 1,                                         //suggest using the spread operator instead of .apply().
        "prefer-template": 1,                                       //suggest using template literals instead of strings concatenation
        "require-yield": 2,                                         //disallow generator functions that do not have yield
        "rest-spread-spacing": ["error", "never"],                  //enforce spacing between rest and spread operators and their expressions
        "template-curly-spacing": 2,                                //enforce spacing around embedded expressions of template strings
        "yield-star-spacing": [2, "after"]                          //enforce spacing around the * in yield* expressions
    }
}
